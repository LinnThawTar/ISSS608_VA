---
title: "Take Home Exercise 3"
format: html
editor: visual
---

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, 
               visNetwork, graphlayouts, ggforce, writexl, 
               skimr, tidytext, tidyverse, igraph,RColorBrewer)
```

```{r}
mc3_data <- fromJSON("data/MC3.json")
```

```{r}
mc3_edges <- as_tibble(mc3_data$links) %>% 
  distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
    summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()
```

```{r}
mc3_nodes <- as_tibble(mc3_data$nodes) %>%
  mutate(country = as.character(country),
         id = as.character(id),
         product_services = as.character(product_services),
         revenue_omu = as.numeric(as.character(revenue_omu)),
         type = as.character(type)) %>%
  select(id, country, type, revenue_omu, product_services)
```

```{r}
DT :: datatable(mc3_edges)
```

```{r}
DT::datatable(mc3_nodes)
```

```{r}
token_nodes <- mc3_nodes %>%
  unnest_tokens(word, 
                product_services)
```

```{r}
stopwords_removed <- token_nodes %>% 
  anti_join(stop_words)
```

```{r}
unique_words <- stopwords_removed %>%
  count(word, sort = TRUE)
```

```{r}
write_xlsx(unique_words,"C:/LinnThawTar/ISSS608_VAA/Take_Home_Exercise/Take_Home_EX_3/data/words.xlsx")
```

```{r}
id1 <- mc3_edges %>%
  select(source) %>%
  rename(id = source)
id2 <- mc3_edges %>%
  select(target) %>%
  rename(id = target)
mc3_nodes1 <- rbind(id1, id2) %>%
  distinct() %>%
  left_join(mc3_nodes,
            unmatched = "drop")
```

```{r}
mc3_graph <- tbl_graph(nodes = mc3_nodes1,
                       edges = mc3_edges,
                       directed = TRUE)
```

```{r}
edges_df <- mc3_graph %>%
  activate(edges) %>%
  as.tibble()
```

```{r}
nodes_df <- mc3_graph %>%
  activate(nodes) %>%
  as.tibble() %>%
  rename(label = id) %>%
  mutate(id=row_number()) %>%
  select(id, label)
```

```{r}
g <- graph_from_data_frame(d=edges_df, vertices=nodes_df, directed=FALSE) # an undirected graph
g
```

```{r}
degree_centrality <- degree(g)
nodes_df$degree_centrality <- degree_centrality[as.character(nodes_df$label)]
head(sort(degree_centrality, decreasing=TRUE))
```

```{r}
mc3_colors_centrality <- rev(colorRampPalette(brewer.pal(9, "Oranges"))(22))
nodes_df <- nodes_df %>% mutate(degree_rank=37325-floor(rank(degree_centrality)),
                                color.background=mc3_colors_centrality[degree_rank])
network_degree <- visNetwork(nodes_df, edges_df, height='350px', width="100%", main="Degree Centrality") %>%
  visLayout(randomSeed=21) %>% 
  visOptions(highlightNearest=TRUE,
             nodesIdSelection=TRUE,
             selectedBy="degree_rank") %>% 
  visInteraction(hideEdgesOnDrag=TRUE,
                 dragNodes=TRUE,
                 dragView=TRUE,
                 zoomView=TRUE,
                 navigationButtons=TRUE)
network_degree
```
