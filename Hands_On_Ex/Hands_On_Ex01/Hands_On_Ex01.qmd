---
title: "Hands_On Exercise 1"
author: "Linn Thaw Tar"
---

# Getting Started

## Install and launching R packages

```{r}
pacman::p_load(tidyverse)
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

install.packages("ggplot2") install.packages("tidyverse") library(ggplot2) library(tidyverse)

# Plotting a simple bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) + 
  geom_bar()
```

## R Graphics

```{r}
hist(exam_data$MATHS)
```

# GGplot2

```{r}
ggplot(data=exam_data, aes(x=MATHS)) +
  geom_histogram(bins=10,
                 boundary=100,
                 color='black',
                 fill='grey') +
  ggtitle('Distribution of Maths Score')
```

## Geometric Objects: geom_bar

```{r}
ggplot(data=exam_data,
       aes(x=RACE)) +
  geom_bar()
```

## Geometric Objects: geom_dotplot

```{r}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

```{r}
ggplot(data=exam_data,
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,
               dotsize=0.5) +
  scale_y_continuous(NULL,
                     breaks=NULL)
```

## Geometric Objects: geom_histogram()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS))+
  geom_histogram()
```

### Modifying geometric object by changing *geom()*

```{r}
ggplot(data=exam_data,
       aes(x=MATHS))+
  geom_histogram(bins=20,
                 color='black',
                 fill='light blue')
```

### Modifying geometric object by changing *aes()*

```{r}
ggplot(data=exam_data,
      aes(x=MATHS,
          fill=GENDER))+
  geom_histogram(bins=20,
                 color='grey39')
```

## Geometric Objects: geom_density()

```{r}
ggplot(data=exam_data,
      aes(x=MATHS)) +
  geom_density()
```

```{r}
ggplot(data=exam_data,
      aes(x=MATHS,
          colour=GENDER)) +
  geom_density()
```

## Geometric Objects: geom_boxplot

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot()
```

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot(notch = TRUE)
```

## Geometric Objects: geom_violin

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_violin()
```

## Geometric Objects: geom_point

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH))+
  geom_point()
```

## Geometric Objects can be combined

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot()+
  geom_point(position='jitter',
             size = 0.5)
```

## Essential Grammatical Elements in ggplot2: stat

### Working with stat()

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot()+
  stat_summary(geom='point',
               fun='mean',
               color='red',
               size=4)
```

### Adding a best fit curve on scatterplot?

```{r}
ggplot(data=exam_data,
       aes(x=MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm,size=0.7)
```

## Essential Grammatical Elements in ggplot2: Facets

### Working with facet_wrap()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS))+
  geom_histogram(bins=20)+
  facet_wrap(~CLASS)
```

```{r}
ggplot(data=exam_data,
       aes(x=MATHS))+
  geom_histogram(bins=20)+
  facet_grid(~CLASS)
```

## Essential Grammatical Elements in ggplot2: Coordinate

### Working with Coordinate

```{r}
ggplot(data=exam_data,
       aes(x=RACE))+
  geom_bar()
```

```{r}
ggplot(data=exam_data,
       aes(x=RACE))+
  geom_bar()+
  coord_flip()
```

### Changing the y- and x- axis range

```{r}
ggplot(data=exam_data,
       aes(x = MATHS, y = ENGLISH))+
  geom_point()+
  geom_smooth(method=lm,
              size=0.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

## Essential Grammatical Elements in ggplot2: Themes

### Working with theme

```{r}
ggplot(data=exam_data,
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()+
  theme_gray()
```

### Theme Classic

```{r}
ggplot(data=exam_data,
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()+
  theme_classic()
```

### Theme Minimal

```{r}
ggplot(data=exam_data,
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()+
  theme_minimal()
```

\
